{"name": "登录测试 - seel-test-alexsong-1600", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: '/Users/alex/PycharmProjects/pytest_framework/image/test_login[https://wfd-dev.seel.com/home-seel-test-alexsong-1600-yuchen.song+1600@seel.com-12345678ABbc!!]_20250427_163320.png'", "trace": "self = <Test_Case.MD.test_md_login.TestMDLogin object at 0x106786520>, url = 'https://wfd-dev.seel.com/home', domain = 'seel-test-alexsong-1600', email = 'yuchen.song+1600@seel.com', order = '12345678ABbc!!'\n\n    @pytest.mark.parametrize(\"url, domain, email, order\", read_data(\"/Users/alex/登陆数据.xlsx\", \"MD登陆数据\"))\n    @allure.feature(\"MD 登录功能\")\n    @allure.story(\"MD 登录测试\")\n    def test_login(self, url, domain, email, order):\n        allure.dynamic.title(f\"登录测试 - {domain}\")\n        allure.dynamic.description(f\"测试渠道: {domain}, 邮箱: {email}, 订单号: {order}\")\n    \n        try:\n            with allure.step(\"打开MD Dashboard页面\"):\n                self.driver.get(url)\n                allure.attach(self.driver.get_screenshot_as_png(), name=\"页面截图\", attachment_type=allure.attachment_type.PNG)\n>               assert \"Merchant Dashboard\" in self.driver.title\nE               assert 'Merchant Dashboard' in ''\nE                +  where '' = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"414bcb23520e495e8eec8fc75b5095dc\")>.title\nE                +    where <selenium.webdriver.chrome.webdriver.WebDriver (session=\"414bcb23520e495e8eec8fc75b5095dc\")> = <Test_Case.MD.test_md_login.TestMDLogin object at 0x106786520>.driver\n\nTest_Case/MD/test_md_login.py:68: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Test_Case.MD.test_md_login.TestMDLogin object at 0x106786520>, url = 'https://wfd-dev.seel.com/home', domain = 'seel-test-alexsong-1600', email = 'yuchen.song+1600@seel.com', order = '12345678ABbc!!'\n\n    @pytest.mark.parametrize(\"url, domain, email, order\", read_data(\"/Users/alex/登陆数据.xlsx\", \"MD登陆数据\"))\n    @allure.feature(\"MD 登录功能\")\n    @allure.story(\"MD 登录测试\")\n    def test_login(self, url, domain, email, order):\n        allure.dynamic.title(f\"登录测试 - {domain}\")\n        allure.dynamic.description(f\"测试渠道: {domain}, 邮箱: {email}, 订单号: {order}\")\n    \n        try:\n            with allure.step(\"打开MD Dashboard页面\"):\n                self.driver.get(url)\n                allure.attach(self.driver.get_screenshot_as_png(), name=\"页面截图\", attachment_type=allure.attachment_type.PNG)\n                assert \"Merchant Dashboard\" in self.driver.title\n    \n            with allure.step(\"执行登录操作\"):\n                element = MD_login(self.driver, email, order)\n                allure.attach(self.driver.get_screenshot_as_png(), name=\"登录后页面截图\", attachment_type=allure.attachment_type.PNG)\n                assert \"Protection\" in element\n    \n        except AssertionError as ae:\n            # 捕获断言失败的异常，记录日志并截图\n            self.log.error(f\"{domain} FAIL —— data : {email} {order}, error: 断言失败\")\n            self.driver.save_screenshot(self.screenshot_path)\n>           allure.attach.file(self.screenshot_path, name=\"失败截图\", attachment_type=allure.attachment_type.PNG)\n\nTest_Case/MD/test_md_login.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv/lib/python3.13/site-packages/allure_commons/_allure.py:213: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\n.venv/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n.venv/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n.venv/lib/python3.13/site-packages/allure_pytest/listener.py:256: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\n.venv/lib/python3.13/site-packages/allure_commons/reporter.py:160: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\n.venv/lib/python3.13/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n.venv/lib/python3.13/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n.venv/lib/python3.13/site-packages/allure_commons/logger.py:39: in report_attached_file\n    shutil.copy2(source, destination)\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/shutil.py:468: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc = '/Users/alex/PycharmProjects/pytest_framework/image/test_login[https://wfd-dev.seel.com/home-seel-test-alexsong-1600-yuchen.song+1600@seel.com-12345678ABbc!!]_20250427_163320.png'\ndst = PosixPath('/Users/alex/PycharmProjects/pytest_framework/allure-results/8de78be3-f9e3-4720-96e1-f51129f752c9-attachment.png')\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst in the most efficient way possible.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        sys.audit(\"shutil.copyfile\", src, dst)\n    \n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        file_size = 0\n        for i, fn in enumerate([src, dst]):\n            try:\n                st = _stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    fn = fn.path if isinstance(fn, os.DirEntry) else fn\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n                if _WINDOWS and i == 0:\n                    file_size = st.st_size\n    \n        if not follow_symlinks and _islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc:\nE           FileNotFoundError: [Errno 2] No such file or directory: '/Users/alex/PycharmProjects/pytest_framework/image/test_login[https://wfd-dev.seel.com/home-seel-test-alexsong-1600-yuchen.song+1600@seel.com-12345678ABbc!!]_20250427_163320.png'\n\n/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/shutil.py:260: FileNotFoundError"}, "description": "测试渠道: seel-test-alexsong-1600, 邮箱: yuchen.song+1600@seel.com, 订单号: 12345678ABbc!!", "steps": [{"name": "打开MD Dashboard页面", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'Merchant Dashboard' in ''\n +  where '' = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"414bcb23520e495e8eec8fc75b5095dc\")>.title\n +    where <selenium.webdriver.chrome.webdriver.WebDriver (session=\"414bcb23520e495e8eec8fc75b5095dc\")> = <Test_Case.MD.test_md_login.TestMDLogin object at 0x106786520>.driver\n", "trace": "  File \"/Users/alex/PycharmProjects/pytest_framework/Test_Case/MD/test_md_login.py\", line 68, in test_login\n    assert \"Merchant Dashboard\" in self.driver.title\n"}, "attachments": [{"name": "页面截图", "source": "9c18cb51-9bf9-433e-a9c1-86deff606449-attachment.png", "type": "image/png"}], "start": 1745742800737, "stop": 1745742805925}], "attachments": [{"name": "失败截图", "source": "8de78be3-f9e3-4720-96e1-f51129f752c9-attachment.png", "type": "image/png"}, {"name": "stderr", "source": "994a28c1-5d75-412e-88f7-d68fed408a6a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "url", "value": "'https://wfd-dev.seel.com/home'"}, {"name": "domain", "value": "'seel-test-alexsong-1600'"}, {"name": "email", "value": "'yuchen.song+1600@seel.com'"}, {"name": "order", "value": "'12345678ABbc!!'"}], "start": 1745742800737, "stop": 1745742806005, "uuid": "af2ef70e-b283-416e-b589-d813cc8465c8", "historyId": "e89c9b6b5d67dd9698823eeedc6273db", "testCaseId": "d9930c3af6f99665d5e01a65a260fc5d", "fullName": "Test_Case.MD.test_md_login.TestMDLogin#test_login", "labels": [{"name": "feature", "value": "MD 登录功能"}, {"name": "story", "value": "MD 登录测试"}, {"name": "parentSuite", "value": "Test_Case.MD"}, {"name": "suite", "value": "test_md_login"}, {"name": "subSuite", "value": "TestMDLogin"}, {"name": "host", "value": "alexdeMacBook-Pro.local"}, {"name": "thread", "value": "78199-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Case.MD.test_md_login"}]}