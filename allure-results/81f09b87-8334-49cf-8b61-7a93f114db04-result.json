{"name": "登录测试 - seel-test-ew01", "status": "failed", "statusDetails": {"message": "AssertionError: 元素未找到，data: sc+seeltestew01@seel.com 123123, screenshot: image/20250702_165355.png", "trace": "self = <Test_Case.MD.test_md_login.TestMDLogin object at 0x106f9b050>, url = 'https://dashboard.seel.com/', domain = 'seel-test-ew01', email = 'sc+seeltestew01@seel.com'\norder = 123123, channel = 'shopify', organization = 'seel-test-alexsong-1500'\n\n    @pytest.mark.parametrize(\"url, domain, email, order, channel, organization\", read_data(\"Test_Data/登陆数据.xlsx\", \"MD登陆数据\"))\n    @allure.feature(\"MD 登录功能\")\n    @allure.story(\"MD 登录测试\")\n    def test_login(self, url, domain, email, order, channel, organization):\n        allure.dynamic.title(f\"登录测试 - {domain}\")\n        allure.dynamic.description(f\"测试渠道: {domain}, 邮箱: {email}, 订单号: {order}\")\n    \n        try:\n            with allure.step(\"打开MD Dashboard页面\"):\n                self.driver.get(url)\n                allure.attach(self.driver.get_screenshot_as_png(), name=\"页面截图\", attachment_type=allure.attachment_type.PNG)\n                assert \"Merchant Dashboard\" in self.driver.title\n    \n            with allure.step(\"执行登录操作\"):\n>               element = MD_login(self.driver, email, order,organization)\n\nTest_Case/MD/test_md_login.py:71: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncommon/MD_login.py:17: in MD_login\n    ele_org = driver.find_element(By.XPATH, f\"//span[text()='{organization}']\")\n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:898: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10703b130>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...00018de402e4 _pthread_start + 136\\\\n15  libsystem_pthread.dylib             0x000000018de3b0fc thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[text()='seel-test-alexsong-1500']\"}\nE         (Session info: chrome=137.0.7151.120); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000105405d14 cxxbridge1$str$ptr + 2735276\nE       1   chromedriver                        0x00000001053fdf88 cxxbridge1$str$ptr + 2703136\nE       2   chromedriver                        0x0000000104f4e6f0 cxxbridge1$string$len + 90424\nE       3   chromedriver                        0x0000000104f959e0 cxxbridge1$string$len + 381992\nE       4   chromedriver                        0x0000000104fd70c8 cxxbridge1$string$len + 650000\nE       5   chromedriver                        0x0000000104f89be8 cxxbridge1$string$len + 333360\nE       6   chromedriver                        0x00000001053c9598 cxxbridge1$str$ptr + 2487600\nE       7   chromedriver                        0x00000001053cc830 cxxbridge1$str$ptr + 2500552\nE       8   chromedriver                        0x00000001053a9c14 cxxbridge1$str$ptr + 2358188\nE       9   chromedriver                        0x00000001053cd0b8 cxxbridge1$str$ptr + 2502736\nE       10  chromedriver                        0x000000010539adec cxxbridge1$str$ptr + 2297220\nE       11  chromedriver                        0x00000001053ed420 cxxbridge1$str$ptr + 2634680\nE       12  chromedriver                        0x00000001053ed5ac cxxbridge1$str$ptr + 2635076\nE       13  chromedriver                        0x00000001053fdbd4 cxxbridge1$str$ptr + 2702188\nE       14  libsystem_pthread.dylib             0x000000018de402e4 _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x000000018de3b0fc thread_start + 8\n\n.venv/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py:232: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Test_Case.MD.test_md_login.TestMDLogin object at 0x106f9b050>, url = 'https://dashboard.seel.com/', domain = 'seel-test-ew01', email = 'sc+seeltestew01@seel.com'\norder = 123123, channel = 'shopify', organization = 'seel-test-alexsong-1500'\n\n    @pytest.mark.parametrize(\"url, domain, email, order, channel, organization\", read_data(\"Test_Data/登陆数据.xlsx\", \"MD登陆数据\"))\n    @allure.feature(\"MD 登录功能\")\n    @allure.story(\"MD 登录测试\")\n    def test_login(self, url, domain, email, order, channel, organization):\n        allure.dynamic.title(f\"登录测试 - {domain}\")\n        allure.dynamic.description(f\"测试渠道: {domain}, 邮箱: {email}, 订单号: {order}\")\n    \n        try:\n            with allure.step(\"打开MD Dashboard页面\"):\n                self.driver.get(url)\n                allure.attach(self.driver.get_screenshot_as_png(), name=\"页面截图\", attachment_type=allure.attachment_type.PNG)\n                assert \"Merchant Dashboard\" in self.driver.title\n    \n            with allure.step(\"执行登录操作\"):\n                element = MD_login(self.driver, email, order,organization)\n                allure.attach(self.driver.get_screenshot_as_png(), name=\"登录后页面截图\", attachment_type=allure.attachment_type.PNG)\n                assert \"Protection\" in element\n    \n        except AssertionError as ae:\n            # 捕获断言失败的异常，记录日志并截图\n            self.log.error(f\"{domain} FAIL —— data : {email} {order}, error: 断言失败\")\n            self.driver.save_screenshot(self.screenshot_path)\n            allure.attach.file(self.screenshot_path, name=\"失败截图\", attachment_type=allure.attachment_type.PNG)\n            raise AssertionError(f\"Assertion failed，data: {email} {order}, screenshot: {self.screenshot_path}\")\n    \n        except NoSuchElementException as ne:\n            # 捕获元素未找到的异常，记录日志并截图\n            self.log.error(f\"{domain} FAIL —— data : {email} {order}, error: 元素未找到\")\n            self.driver.save_screenshot(self.screenshot_path)\n            allure.attach.file(self.screenshot_path, name=\"失败截图\", attachment_type=allure.attachment_type.PNG)\n>           raise AssertionError(f\"元素未找到，data: {email} {order}, screenshot: {self.screenshot_path}\")\nE           AssertionError: 元素未找到，data: sc+seeltestew01@seel.com 123123, screenshot: image/20250702_165355.png\n\nTest_Case/MD/test_md_login.py:87: AssertionError"}, "description": "测试渠道: seel-test-ew01, 邮箱: sc+seeltestew01@seel.com, 订单号: 123123", "steps": [{"name": "打开MD Dashboard页面", "status": "passed", "attachments": [{"name": "页面截图", "source": "3ebdde0d-0114-4863-b0aa-0c9f5ebc8a86-attachment.png", "type": "image/png"}], "start": 1751446435365, "stop": 1751446439838}, {"name": "执行登录操作", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[text()='seel-test-alexsong-1500']\"}\n  (Session info: chrome=137.0.7151.120); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n0   chromedriver                        0x0000000105405d14 cxxbridge1$str$ptr + 2735276\n1   chromedriver                        0x00000001053fdf88 cxxbridge1$str$ptr + 2703136\n2   chromedriver                        0x0000000104f4e6f0 cxxbridge1$string$len + 90424\n3   chromedriver                        0x0000000104f959e0 cxxbridge1$string$len + 381992\n4   chromedriver                        0x0000000104fd70c8 cxxbridge1$string$len + 650000\n5   chromedriver                        0x0000000104f89be8 cxxbridge1$string$len + 333360\n6   chromedriver                        0x00000001053c9598 cxxbridge1$str$ptr + 2487600\n7   chromedriver                        0x00000001053cc830 cxxbridge1$str$ptr + 2500552\n8   chromedriver                        0x00000001053a9c14 cxxbridge1$str$ptr + 2358188\n9   chromedriver                        0x00000001053cd0b8 cxxbridge1$str$ptr + 2502736\n10  chromedriver                        0x000000010539adec cxxbridge1$str$ptr + 2297220\n11  chromedriver                        0x00000001053ed420 cxxbridge1$str$ptr + 2634680\n12  chromedriver                        0x00000001053ed5ac cxxbridge1$str$ptr + 2635076\n13  chromedriver                        0x00000001053fdbd4 cxxbridge1$str$ptr + 2702188\n14  libsystem_pthread.dylib             0x000000018de402e4 _pthread_start + 136\n15  libsystem_pthread.dylib             0x000000018de3b0fc thread_start + 8\n\n", "trace": "  File \"/Users/alex/PycharmProjects/pytest_framework/Test_Case/MD/test_md_login.py\", line 71, in test_login\n    element = MD_login(self.driver, email, order,organization)\n  File \"/Users/alex/PycharmProjects/pytest_framework/common/MD_login.py\", line 17, in MD_login\n    ele_org = driver.find_element(By.XPATH, f\"//span[text()='{organization}']\")\n  File \"/Users/alex/PycharmProjects/pytest_framework/.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py\", line 898, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/alex/PycharmProjects/pytest_framework/.venv/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"/Users/alex/PycharmProjects/pytest_framework/.venv/lib/python3.13/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1751446439838, "stop": 1751446454334}], "attachments": [{"name": "失败截图", "source": "d87abcf3-5ecd-4bc4-81c9-ce083b7d1458-attachment.png", "type": "image/png"}, {"name": "stderr", "source": "e4973823-2db5-4b54-8c43-825cb9762776-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "url", "value": "'https://dashboard.seel.com/'"}, {"name": "domain", "value": "'seel-test-ew01'"}, {"name": "email", "value": "'sc+seeltestew01@seel.com'"}, {"name": "order", "value": "123123"}, {"name": "channel", "value": "'shopify'"}, {"name": "organization", "value": "'seel-test-alexsong-1500'"}], "start": 1751446435365, "stop": 1751446454538, "uuid": "9d2e0a79-cd5b-4a8d-b299-e1c98c3e69a0", "historyId": "1b1593fe7ae70b1545af1836a36d18b3", "testCaseId": "d9930c3af6f99665d5e01a65a260fc5d", "fullName": "Test_Case.MD.test_md_login.TestMDLogin#test_login", "labels": [{"name": "story", "value": "MD 登录测试"}, {"name": "feature", "value": "MD 登录功能"}, {"name": "parentSuite", "value": "Test_Case.MD"}, {"name": "suite", "value": "test_md_login"}, {"name": "subSuite", "value": "TestMDLogin"}, {"name": "host", "value": "alexdeMacBook-Pro.local"}, {"name": "thread", "value": "96702-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Case.MD.test_md_login"}]}